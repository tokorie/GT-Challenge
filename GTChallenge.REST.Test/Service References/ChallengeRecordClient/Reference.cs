//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GTChallenge.REST.Test.ChallengeRecordClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecordFault", Namespace="http://schemas.datacontract.org/2004/07/GTChallenge.REST")]
    [System.SerializableAttribute()]
    public partial class RecordFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordLineField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordLine {
            get {
                return this.RecordLineField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordLineField, value) != true)) {
                    this.RecordLineField = value;
                    this.RaisePropertyChanged("RecordLine");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecordItem", Namespace="http://schemas.datacontract.org/2004/07/GTChallenge.Code")]
    [System.SerializableAttribute()]
    public partial class RecordItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateofbirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FavoriteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dateofbirth {
            get {
                return this.DateofbirthField;
            }
            set {
                if ((object.ReferenceEquals(this.DateofbirthField, value) != true)) {
                    this.DateofbirthField = value;
                    this.RaisePropertyChanged("Dateofbirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Favorite {
            get {
                return this.FavoriteField;
            }
            set {
                if ((object.ReferenceEquals(this.FavoriteField, value) != true)) {
                    this.FavoriteField = value;
                    this.RaisePropertyChanged("Favorite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChallengeRecordClient.IChallengeRecordsService")]
    public interface IChallengeRecordsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChallengeRecordsService/PostRecord", ReplyAction="http://tempuri.org/IChallengeRecordsService/PostRecordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GTChallenge.REST.Test.ChallengeRecordClient.RecordFault), Action="http://tempuri.org/IChallengeRecordsService/PostRecordRecordFaultFault", Name="RecordFault", Namespace="http://schemas.datacontract.org/2004/07/GTChallenge.REST")]
        bool PostRecord(string dataline);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChallengeRecordsService/PostRecord", ReplyAction="http://tempuri.org/IChallengeRecordsService/PostRecordResponse")]
        System.IAsyncResult BeginPostRecord(string dataline, System.AsyncCallback callback, object asyncState);
        
        bool EndPostRecord(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChallengeRecordsService/GetRecordsByGender", ReplyAction="http://tempuri.org/IChallengeRecordsService/GetRecordsByGenderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GTChallenge.REST.Test.ChallengeRecordClient.RecordFault), Action="http://tempuri.org/IChallengeRecordsService/GetRecordsByGenderRecordFaultFault", Name="RecordFault", Namespace="http://schemas.datacontract.org/2004/07/GTChallenge.REST")]
        GTChallenge.REST.Test.ChallengeRecordClient.RecordItem[] GetRecordsByGender();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChallengeRecordsService/GetRecordsByGender", ReplyAction="http://tempuri.org/IChallengeRecordsService/GetRecordsByGenderResponse")]
        System.IAsyncResult BeginGetRecordsByGender(System.AsyncCallback callback, object asyncState);
        
        GTChallenge.REST.Test.ChallengeRecordClient.RecordItem[] EndGetRecordsByGender(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChallengeRecordsService/GetRecordsByBirthDate", ReplyAction="http://tempuri.org/IChallengeRecordsService/GetRecordsByBirthDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GTChallenge.REST.Test.ChallengeRecordClient.RecordFault), Action="http://tempuri.org/IChallengeRecordsService/GetRecordsByBirthDateRecordFaultFault" +
            "", Name="RecordFault", Namespace="http://schemas.datacontract.org/2004/07/GTChallenge.REST")]
        GTChallenge.REST.Test.ChallengeRecordClient.RecordItem[] GetRecordsByBirthDate();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChallengeRecordsService/GetRecordsByBirthDate", ReplyAction="http://tempuri.org/IChallengeRecordsService/GetRecordsByBirthDateResponse")]
        System.IAsyncResult BeginGetRecordsByBirthDate(System.AsyncCallback callback, object asyncState);
        
        GTChallenge.REST.Test.ChallengeRecordClient.RecordItem[] EndGetRecordsByBirthDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChallengeRecordsService/GetRecordsByName", ReplyAction="http://tempuri.org/IChallengeRecordsService/GetRecordsByNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GTChallenge.REST.Test.ChallengeRecordClient.RecordFault), Action="http://tempuri.org/IChallengeRecordsService/GetRecordsByNameRecordFaultFault", Name="RecordFault", Namespace="http://schemas.datacontract.org/2004/07/GTChallenge.REST")]
        GTChallenge.REST.Test.ChallengeRecordClient.RecordItem[] GetRecordsByName();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChallengeRecordsService/GetRecordsByName", ReplyAction="http://tempuri.org/IChallengeRecordsService/GetRecordsByNameResponse")]
        System.IAsyncResult BeginGetRecordsByName(System.AsyncCallback callback, object asyncState);
        
        GTChallenge.REST.Test.ChallengeRecordClient.RecordItem[] EndGetRecordsByName(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChallengeRecordsServiceChannel : GTChallenge.REST.Test.ChallengeRecordClient.IChallengeRecordsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PostRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRecordsByGenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRecordsByGenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GTChallenge.REST.Test.ChallengeRecordClient.RecordItem[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GTChallenge.REST.Test.ChallengeRecordClient.RecordItem[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRecordsByBirthDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRecordsByBirthDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GTChallenge.REST.Test.ChallengeRecordClient.RecordItem[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GTChallenge.REST.Test.ChallengeRecordClient.RecordItem[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRecordsByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRecordsByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GTChallenge.REST.Test.ChallengeRecordClient.RecordItem[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GTChallenge.REST.Test.ChallengeRecordClient.RecordItem[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChallengeRecordsServiceClient : System.ServiceModel.ClientBase<GTChallenge.REST.Test.ChallengeRecordClient.IChallengeRecordsService>, GTChallenge.REST.Test.ChallengeRecordClient.IChallengeRecordsService {
        
        private BeginOperationDelegate onBeginPostRecordDelegate;
        
        private EndOperationDelegate onEndPostRecordDelegate;
        
        private System.Threading.SendOrPostCallback onPostRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRecordsByGenderDelegate;
        
        private EndOperationDelegate onEndGetRecordsByGenderDelegate;
        
        private System.Threading.SendOrPostCallback onGetRecordsByGenderCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRecordsByBirthDateDelegate;
        
        private EndOperationDelegate onEndGetRecordsByBirthDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetRecordsByBirthDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRecordsByNameDelegate;
        
        private EndOperationDelegate onEndGetRecordsByNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetRecordsByNameCompletedDelegate;
        
        public ChallengeRecordsServiceClient() {
        }
        
        public ChallengeRecordsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ChallengeRecordsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChallengeRecordsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChallengeRecordsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<PostRecordCompletedEventArgs> PostRecordCompleted;
        
        public event System.EventHandler<GetRecordsByGenderCompletedEventArgs> GetRecordsByGenderCompleted;
        
        public event System.EventHandler<GetRecordsByBirthDateCompletedEventArgs> GetRecordsByBirthDateCompleted;
        
        public event System.EventHandler<GetRecordsByNameCompletedEventArgs> GetRecordsByNameCompleted;
        
        public bool PostRecord(string dataline) {
            return base.Channel.PostRecord(dataline);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPostRecord(string dataline, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPostRecord(dataline, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndPostRecord(System.IAsyncResult result) {
            return base.Channel.EndPostRecord(result);
        }
        
        private System.IAsyncResult OnBeginPostRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string dataline = ((string)(inValues[0]));
            return this.BeginPostRecord(dataline, callback, asyncState);
        }
        
        private object[] OnEndPostRecord(System.IAsyncResult result) {
            bool retVal = this.EndPostRecord(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPostRecordCompleted(object state) {
            if ((this.PostRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PostRecordCompleted(this, new PostRecordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PostRecordAsync(string dataline) {
            this.PostRecordAsync(dataline, null);
        }
        
        public void PostRecordAsync(string dataline, object userState) {
            if ((this.onBeginPostRecordDelegate == null)) {
                this.onBeginPostRecordDelegate = new BeginOperationDelegate(this.OnBeginPostRecord);
            }
            if ((this.onEndPostRecordDelegate == null)) {
                this.onEndPostRecordDelegate = new EndOperationDelegate(this.OnEndPostRecord);
            }
            if ((this.onPostRecordCompletedDelegate == null)) {
                this.onPostRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPostRecordCompleted);
            }
            base.InvokeAsync(this.onBeginPostRecordDelegate, new object[] {
                        dataline}, this.onEndPostRecordDelegate, this.onPostRecordCompletedDelegate, userState);
        }
        
        public GTChallenge.REST.Test.ChallengeRecordClient.RecordItem[] GetRecordsByGender() {
            return base.Channel.GetRecordsByGender();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRecordsByGender(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRecordsByGender(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public GTChallenge.REST.Test.ChallengeRecordClient.RecordItem[] EndGetRecordsByGender(System.IAsyncResult result) {
            return base.Channel.EndGetRecordsByGender(result);
        }
        
        private System.IAsyncResult OnBeginGetRecordsByGender(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRecordsByGender(callback, asyncState);
        }
        
        private object[] OnEndGetRecordsByGender(System.IAsyncResult result) {
            GTChallenge.REST.Test.ChallengeRecordClient.RecordItem[] retVal = this.EndGetRecordsByGender(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRecordsByGenderCompleted(object state) {
            if ((this.GetRecordsByGenderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRecordsByGenderCompleted(this, new GetRecordsByGenderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRecordsByGenderAsync() {
            this.GetRecordsByGenderAsync(null);
        }
        
        public void GetRecordsByGenderAsync(object userState) {
            if ((this.onBeginGetRecordsByGenderDelegate == null)) {
                this.onBeginGetRecordsByGenderDelegate = new BeginOperationDelegate(this.OnBeginGetRecordsByGender);
            }
            if ((this.onEndGetRecordsByGenderDelegate == null)) {
                this.onEndGetRecordsByGenderDelegate = new EndOperationDelegate(this.OnEndGetRecordsByGender);
            }
            if ((this.onGetRecordsByGenderCompletedDelegate == null)) {
                this.onGetRecordsByGenderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRecordsByGenderCompleted);
            }
            base.InvokeAsync(this.onBeginGetRecordsByGenderDelegate, null, this.onEndGetRecordsByGenderDelegate, this.onGetRecordsByGenderCompletedDelegate, userState);
        }
        
        public GTChallenge.REST.Test.ChallengeRecordClient.RecordItem[] GetRecordsByBirthDate() {
            return base.Channel.GetRecordsByBirthDate();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRecordsByBirthDate(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRecordsByBirthDate(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public GTChallenge.REST.Test.ChallengeRecordClient.RecordItem[] EndGetRecordsByBirthDate(System.IAsyncResult result) {
            return base.Channel.EndGetRecordsByBirthDate(result);
        }
        
        private System.IAsyncResult OnBeginGetRecordsByBirthDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRecordsByBirthDate(callback, asyncState);
        }
        
        private object[] OnEndGetRecordsByBirthDate(System.IAsyncResult result) {
            GTChallenge.REST.Test.ChallengeRecordClient.RecordItem[] retVal = this.EndGetRecordsByBirthDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRecordsByBirthDateCompleted(object state) {
            if ((this.GetRecordsByBirthDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRecordsByBirthDateCompleted(this, new GetRecordsByBirthDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRecordsByBirthDateAsync() {
            this.GetRecordsByBirthDateAsync(null);
        }
        
        public void GetRecordsByBirthDateAsync(object userState) {
            if ((this.onBeginGetRecordsByBirthDateDelegate == null)) {
                this.onBeginGetRecordsByBirthDateDelegate = new BeginOperationDelegate(this.OnBeginGetRecordsByBirthDate);
            }
            if ((this.onEndGetRecordsByBirthDateDelegate == null)) {
                this.onEndGetRecordsByBirthDateDelegate = new EndOperationDelegate(this.OnEndGetRecordsByBirthDate);
            }
            if ((this.onGetRecordsByBirthDateCompletedDelegate == null)) {
                this.onGetRecordsByBirthDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRecordsByBirthDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetRecordsByBirthDateDelegate, null, this.onEndGetRecordsByBirthDateDelegate, this.onGetRecordsByBirthDateCompletedDelegate, userState);
        }
        
        public GTChallenge.REST.Test.ChallengeRecordClient.RecordItem[] GetRecordsByName() {
            return base.Channel.GetRecordsByName();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRecordsByName(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRecordsByName(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public GTChallenge.REST.Test.ChallengeRecordClient.RecordItem[] EndGetRecordsByName(System.IAsyncResult result) {
            return base.Channel.EndGetRecordsByName(result);
        }
        
        private System.IAsyncResult OnBeginGetRecordsByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRecordsByName(callback, asyncState);
        }
        
        private object[] OnEndGetRecordsByName(System.IAsyncResult result) {
            GTChallenge.REST.Test.ChallengeRecordClient.RecordItem[] retVal = this.EndGetRecordsByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRecordsByNameCompleted(object state) {
            if ((this.GetRecordsByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRecordsByNameCompleted(this, new GetRecordsByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRecordsByNameAsync() {
            this.GetRecordsByNameAsync(null);
        }
        
        public void GetRecordsByNameAsync(object userState) {
            if ((this.onBeginGetRecordsByNameDelegate == null)) {
                this.onBeginGetRecordsByNameDelegate = new BeginOperationDelegate(this.OnBeginGetRecordsByName);
            }
            if ((this.onEndGetRecordsByNameDelegate == null)) {
                this.onEndGetRecordsByNameDelegate = new EndOperationDelegate(this.OnEndGetRecordsByName);
            }
            if ((this.onGetRecordsByNameCompletedDelegate == null)) {
                this.onGetRecordsByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRecordsByNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetRecordsByNameDelegate, null, this.onEndGetRecordsByNameDelegate, this.onGetRecordsByNameCompletedDelegate, userState);
        }
    }
}
